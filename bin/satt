#!/usr/bin/env python
'''
// Copyright (c) 2015 Intel Corporation
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
'''

import os
import sys
import subprocess


def main():

    if sys.version_info >= (3, 0):
        print ("ERROR: Please run satt with Python2.7*")
        sys.exit(-1)

    sat_path = os.path.split(os.path.dirname(os.path.realpath(__file__)))[0]
    sys.path.append(os.path.join(sat_path))
    os.environ['SATT_EXEC'] = os.path.realpath(__file__)

    VENV = hasattr(sys, "real_prefix")
    satt_venv_bin = os.path.join(sat_path,'bin','env', 'bin')
    activate_this_file = os.path.join(satt_venv_bin, 'activate_this.py')

    if not VENV and os.path.isfile(activate_this_file):
        execfile(activate_this_file, dict(__file__=activate_this_file))
    else:
        satt_venv_bin = False
        print ("Warning: SATT has not been installed, please install SATT by\n > ./bin/satt install")

    from satt.common import initializer
    satt = initializer.Satt(sat_path, satt_venv_bin)
    satt.initialize()

    options, opt_desc = satt.get_commands()

    if len(sys.argv) > 1:
        opt = sys.argv[1]
        if opt in options and options[opt]:
            # Launch command
            sys.argv = sys.argv[1:]
            mod = __import__(options[opt], fromlist=['command'])
            class_name = mod.command.class_name
            plugin_class = getattr((mod.command), class_name)
            plugin = plugin_class()
            plugin.action()
        elif sys.argv[1][0] == '-':
            satt.parse_options()
        else:
            print(f"Unknown command '{opt}" + "'\n")
            satt.print_usage()

    else:
        satt.print_usage()


if __name__ == "__main__":
    main()
